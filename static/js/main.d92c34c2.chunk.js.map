{"version":3,"sources":["common/FormControls/FormControls.module.css","components/Users/Users.module.css","components/Profile/Profile.module.css","dalApi/dalApi.js","utils/removeItemByIndex.js","Redux/usersReducer.js","components/Users/User.jsx","components/HOC/withAuthRedirect.js","Redux/authReducer.js","Redux/profileReducer.js","components/Logout/Logout.jsx","components/HOC/withSetPathNameInLocalStorage.js","components/Users/Users.jsx","utils/sortById.js","common/FormControls/FormControls.js","validators/userValidator.js","components/Profile/ProfileForm.jsx","utils/checkWhatObjectFieldWasChanged.js","components/Profile/Profile.jsx","validators/createUserValidator.js","validators/validate.js","components/Users/CreateUser/CreateUserForm.jsx","components/Users/CreateUser/CreateUser.jsx","validators/loginValidator.js","components/Login/LoginForm.jsx","components/Login/Login.jsx","App.js","serviceWorker.js","Redux/Store.js","index.js","components/Login/Login.module.css","components/Users/CreateUser/CreateUser.module.css","App.module.css","components/Logout/Logout.module.css"],"names":["module","exports","instance","axios","baseURL","loginAPI","username","password","post","then","response","error","status","requestUsersAPI","token","get","headers","authorization","requestUserProfileAPI","userId","createNewUserAPI","userData","updateUserAPI","patch","JSON","stringify","deleteUserAPI","delete","removeItemById","array","id","forEach","item","index","splice","map","i","initialState","users","deleteUserAction","type","addNewUserAction","usersReducer","state","action","connect","auth","deleteUser","dispatch","a","first_name","last_name","className","styles","User","to","onClick","window","confirm","DeleteActionSpan","mapStateToProps","WithAuthRedirect","Component","withRouter","props","history","push","isAuth","setAuthDataAction","authReducer","localStorage","removeItem","userProfile","setUserProfile","nullUserAction","profileReducer","logout","Logout","LogoutButton","WithSetPathNameInLocalStorage","path","location","pathname","useEffect","setItem","UsersCompose","compose","withAuthRedirect","requestUsers","useState","pageUsers","setPageUsers","filterValue","setFilterValue","isSortByUp","setIsSortByUp","useRequestUsers","useResetSortListener","usersElements","u","UsersHeader","value","onChange","e","target","filter","includes","filterUsers","placeholder","UsersFilterInput","classNames","SortById","ByUp","ByDown","sortByNum","b","num","groups","Object","values","reduce","acc","group","sort","concat","reverse","sortById","CreateNewUserLink","Users","Header","data","Input","input","meta","hasError","touched","Error","ErrorSpan","passwordInput","setType","ShowLabel","requiredField","maxLengthCreator","maxLength","length","correctUsername","test","correctFirstname","firstname","correctLastname","lastname","max150","max30","EditProfileReduxForm","initialValues","profile","is_active","reduxForm","form","onSubmit","handleSubmit","EditProfileForm","Field","component","validate","name","formStyles","disabled","isSubmitting","ProfileSubmitButton","ProfileCancelButton","preventDefault","onCancelClick","EditProfile","setSubmitting","formData","underscore","onSuccess","objectWithChangedFields","obj_1","obj_2","matchesObj","Map","set","fromEntries","checkWhatObjectFieldWasChanged","updateUser","undefined","profileCompose","requestUserProfile","stopSubmit","_error","match","isEditing","setEditing","params","Profile","ProfileInfo","is_superuser","last_login","EditButton","ToUsersButton","correctPassword","errors","confirmPassword","CreateUserReduxForm","typeConfirmPassword","setTypeConfirmPassword","typePassword","setTypePassword","CreateUserForm","htmlFor","CreateUserButton","createNewUser","CreateUserCompose","CreateUser","code","max128","LoginReduxForm","LoginForm","LoginInputWrapper","LoginSubmitButton","loginCompose","login","Login","LoginHeading","remember_me","finally","_","lastPath","initializeApp","getItem","React","isInitializing","setIsInitializing","useInitializeApp","useCheckLastPathname","App","exact","render","Boolean","hostname","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d92c34c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"FormControls_Error__3WPFQ\",\"ErrorSpan\":\"FormControls_ErrorSpan__6w8dm\",\"Input\":\"FormControls_Input__2d90D\",\"LoginInput\":\"FormControls_LoginInput__27ZRW\",\"StyledPasswordInput\":\"FormControls_StyledPasswordInput__3_Lf3\",\"StyledInput\":\"FormControls_StyledInput__3mWtX\",\"ShowLabel\":\"FormControls_ShowLabel__3oguU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__1v7m0\",\"Header\":\"Users_Header__KwosV\",\"User\":\"Users_User__2_MfI\",\"UsersFilterInput\":\"Users_UsersFilterInput__U_EX7\",\"UsersHeader\":\"Users_UsersHeader__1ARBg\",\"DeleteActionSpan\":\"Users_DeleteActionSpan__14t_e\",\"SortById\":\"Users_SortById__3GdX2\",\"ByDown\":\"Users_ByDown__2iye3\",\"ByUp\":\"Users_ByUp__3FAgj\",\"CreateNewUserLink\":\"Users_CreateNewUserLink__GrGV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3NmHj\",\"ProfileSubmitButton\":\"Profile_ProfileSubmitButton__2nFCi\",\"ProfileCancelButton\":\"Profile_ProfileCancelButton__1PMMu\",\"ProfileInfo\":\"Profile_ProfileInfo__1Ox-h\",\"ToUsersButton\":\"Profile_ToUsersButton__2Iwd2\",\"EditButton\":\"Profile_EditButton__2yeXx\",\"EditProfileForm\":\"Profile_EditProfileForm__1Pe3A\"};","import * as axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://emphasoft-test-assignment.herokuapp.com/\"\r\n})\r\n\r\nexport const loginAPI = (username, password) => {\r\n    return instance.post(\"api-token-auth/\", {username, password}).then(\r\n        response => {\r\n            return response\r\n        },\r\n        error => {\r\n            return error.response.status\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const requestUsersAPI = (token) => {\r\n    return instance.get(\"/api/v1/users/\", {\r\n        headers: {\r\n            authorization: `Token ${token}`\r\n        }\r\n    }).then(\r\n        response => {\r\n            return response\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const requestUserProfileAPI = (userId, token) => {\r\n    return instance.get(`/api/v1/users/${userId}`, {\r\n        headers: {\r\n            authorization: `Token ${token}`\r\n        }\r\n    }).then(\r\n        response => {\r\n            return response\r\n        }\r\n    )\r\n}\r\n\r\nexport const createNewUserAPI = (userData, token) => {\r\n    return instance.post(\r\n        \"/api/v1/users/\",\r\n        userData,\r\n        {\r\n            headers: {\r\n                authorization: `Token ${token}`\r\n            }\r\n        }).then(\r\n        response => {\r\n            return response\r\n        },\r\n        error => {\r\n            return error.response\r\n        }\r\n    )\r\n}\r\n\r\nexport const updateUserAPI = (userData, userId, token) => {\r\n    return instance.patch(\r\n        `/api/v1/users/${userId}/`,\r\n        JSON.stringify(userData),\r\n        {\r\n            headers: {\r\n                authorization: `Token ${token}`,\r\n               \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n    ).then(\r\n        response => response,\r\n        error => error.response\r\n    )\r\n}\r\nexport const deleteUserAPI = (userId, token) => {\r\n    return instance.delete(\r\n        `/api/v1/users/${userId}/`,\r\n        {\r\n            headers: {\r\n                authorization: `Token ${token}`,\r\n               \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n    ).then(\r\n        response => response,\r\n        error => error.response\r\n    )\r\n}","export const removeItemById = (array, id) => {\r\n\r\n        array.forEach((item, index) => {\r\n            if (item.id === id) array.splice(index, 1)\r\n        })\r\n\r\n        return array.map(i => i)\r\n}","import {createNewUserAPI, deleteUserAPI, requestUsersAPI} from \"../dalApi/dalApi\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {removeItemById} from \"../utils/removeItemByIndex\";\r\n\r\nconst SET_USERS = `SET_USERS`\r\nconst ADD_NEW_USER = \"ADD_NEW_USER\"\r\nconst NULL_USERS_DATA = \"NULL_USERS_DATA\"\r\nconst DELETE_USER = \"DELETE_USER\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case ADD_NEW_USER:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.userData]\r\n            }\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                users: removeItemById(state.users, action.userId)\r\n            }\r\n        case NULL_USERS_DATA: {\r\n            return {\r\n                users: []\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUsersAction = (users) => ({type: SET_USERS, users: users})\r\nconst deleteUserAction = (userId) => ({type: DELETE_USER, userId})\r\nexport const addNewUserAction = (userData) => ({type: ADD_NEW_USER, userData})\r\nexport const nullUsersDataAction = () => ({type: NULL_USERS_DATA})\r\n\r\n\r\nexport const requestUsers = (token) => {\r\n    return async dispatch => {\r\n        let response = await requestUsersAPI(token)\r\n\r\n        if (response.status === 200) {\r\n            dispatch(setUsersAction(response.data))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const createNewUser = (userData, token) => async dispatch => {\r\n    let response = await createNewUserAPI(userData, token)\r\n    if (response.code === 201) {\r\n        dispatch(addNewUserAction(response.data))\r\n\r\n    } else if (response.status === 400) {\r\n        let error = Object.values(response.data)[0][0]\r\n        dispatch(stopSubmit(\"createUser\", {_error: error}))\r\n        return error\r\n    }\r\n\r\n}\r\n\r\nexport const deleteUser = (userId, token) => async dispatch => {\r\n    let response = await deleteUserAPI(userId, token)\r\n    if (response.status === 204) {\r\n        dispatch(deleteUserAction(userId))\r\n    }\r\n}\r\n\r\nexport default usersReducer","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteUser} from \"../../Redux/usersReducer\";\r\n\r\nconst User = ({username, first_name, last_name, id, token, deleteUser}) => {\r\n\r\n    const onDeleteUserClick = () => {\r\n        const conf = window.confirm(`Уверены что хотите удалить пользователя?`);\r\n\r\n        if(conf) deleteUser(id, token)\r\n    }\r\n\r\n    return <div className={styles.User}>\r\n\r\n        <div>{id}</div>\r\n        <div>{username}</div>\r\n        <div>{first_name}</div>\r\n        <div>{last_name}</div>\r\n\r\n        <div>\r\n            <NavLink to={\"/Profile/\" + id}>\r\n                ViewProfile\r\n            </NavLink>\r\n        </div>\r\n        <div>\r\n            <span\r\n                onClick={onDeleteUserClick}\r\n                className={styles.DeleteActionSpan}>\r\n                Delete\r\n            </span>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteUser})(User)","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst WithAuthRedirect = (Component) => {\r\n\r\n    const AuthContainer = (props) => {\r\n        if (!props.token) props.history.push('/Login')\r\n        return <Component {...props}/>\r\n\r\n    }\r\n    return connect(mapStateToProps)(withRouter(AuthContainer))\r\n}\r\n\r\nexport default WithAuthRedirect","import { loginAPI } from \"../dalApi/dalApi\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_AUTH_DATA = \"SET_AUTH_DATA\"\r\nconst NULL_AUTH_DATA = \"NULL_AUTH_DATA\"\r\n\r\nlet initialState = {\r\n    token: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        case NULL_AUTH_DATA:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('lastPath')\r\n            return {\r\n                token: null,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthDataAction = (token) => ({type: SET_AUTH_DATA, token})\r\nexport const nullAuthDataAction = () => ({type: NULL_AUTH_DATA})\r\n\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    let response = await loginAPI(username, password)\r\n\r\n    if (response === 400){\r\n        dispatch(stopSubmit(\"login\", {_error: \"Incorrect Username/Password\"}))\r\n    }\r\n    else if (response.status === 200){\r\n        return dispatch(setAuthDataAction(response.data.token))\r\n\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => async dispatch => {\r\n    if (localStorage.getItem('token')){\r\n        dispatch(setAuthDataAction(localStorage.getItem('token')))\r\n    }\r\n}\r\n\r\nexport default authReducer","import {requestUserProfileAPI, updateUserAPI} from \"../dalApi/dalApi\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_PROFILE = `SET_USER_PROFILE`;\r\nconst UPDATE_USER = \"UPDATE_USER\"\r\nconst NULL_PROFILE = \"NULL_PROFILE\"\r\n\r\nlet initialState = {\r\n    userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.userProfile}\r\n            }\r\n        }\r\n        case UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.userData}\r\n            }\r\n        case NULL_PROFILE:\r\n            return {\r\n                userProfile: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (userProfile) => ({type: SET_USER_PROFILE, userProfile})\r\nexport const updateUserAction = (userData) => ({type: UPDATE_USER, userData})\r\nexport const nullUserAction = () => ({type: NULL_PROFILE})\r\n\r\nexport const requestUserProfile = (userId, token) => {\r\n    return async dispatch => {\r\n        let response = await requestUserProfileAPI(userId, token)\r\n        if(response.status === 200){\r\n            dispatch(setUserProfile(response.data))\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (userData, userId, token)  => {\r\n    return async dispatch => {\r\n        let response = await updateUserAPI(userData, userId, token)\r\n        if (response.status === 200){\r\n            dispatch(setUserProfile(response.data))\r\n        }\r\n        else if(response.status === 400){\r\n            let error = Object.values(response.data)[0][0]\r\n            dispatch(stopSubmit(\"editProfile\", {_error: error}))\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\r\nimport styles from \"./Logout.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {nullUsersDataAction} from \"../../Redux/usersReducer\";\r\nimport {nullAuthDataAction} from \"../../Redux/authReducer\";\r\nimport {nullUserAction} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nfunction Logout(props) {\r\n\r\n    const logout = () => {\r\n        props.history.push(\"/Login\")\r\n        props.logout()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Logout}>\r\n            <button className={styles.LogoutButton}\r\n                    onClick={logout}>Logout</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(nullUsersDataAction())\r\n            dispatch(nullAuthDataAction())\r\n            dispatch(nullUserAction())\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Logout));","import React, {useEffect} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst WithSetPathNameInLocalStorage = (Component) => {\r\n\r\n    const useSetLastPathInLocalStorage = (path) => {\r\n\r\n        useEffect(() => {\r\n            localStorage.setItem('lastPath', path)\r\n\r\n        })\r\n    }\r\n\r\n    const SetPathNameContainer = ({location, ...props}) => {\r\n        useSetLastPathInLocalStorage(location.pathname)\r\n\r\n        return <Component {...props}/>\r\n\r\n    }\r\n    return withRouter(SetPathNameContainer)\r\n}\r\n\r\nexport default WithSetPathNameInLocalStorage","import React, {useEffect, useState} from \"react\";\r\nimport {requestUsers} from \"../../Redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport User from \"./User\";\r\nimport {sortById} from \"../../utils/sortById\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./Users.module.css\"\r\nimport classNames from \"classnames\"\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport WithSetPathNameInLocalStorage from \"../HOC/withSetPathNameInLocalStorage\";\r\n\r\nconst useRequestUsers = (requestUsers, token) => {\r\n    useEffect(() => {\r\n        requestUsers(token)\r\n    }, [])\r\n}\r\n\r\nconst useResetSortListener = (users, filterValue, setIsSortByUp) => {\r\n    useEffect(() => {\r\n        setIsSortByUp(null)\r\n    }, [users, filterValue])\r\n}\r\n\r\n\r\nconst Users = ({requestUsers, users, token, ...props}) => {\r\n    let [pageUsers, setPageUsers] = useState(users)\r\n    let [filterValue, setFilterValue] = useState(\"\")\r\n    let [isSortByUp, setIsSortByUp] = useState(null)\r\n\r\n    useRequestUsers(requestUsers, token)//Hook RequestUsers\r\n\r\n    //Слушаем reset сортировки\r\n    useResetSortListener(users, filterValue, setIsSortByUp)\r\n\r\n    useEffect(() => {\r\n        setPageUsers(users)\r\n    }, [users])\r\n\r\n    const filterUsers = (users, value) => {\r\n        return users.filter(u => u.username.includes(value))\r\n    }\r\n\r\n    const onFilterValueChange = (e) => {\r\n        setFilterValue(e.target.value)\r\n        setPageUsers(filterUsers(users, e.target.value))\r\n    }\r\n\r\n    const onSortByIdClick = () => {\r\n        setPageUsers(sortById(pageUsers, isSortByUp))\r\n        setIsSortByUp(!isSortByUp)\r\n    }\r\n\r\n    let usersElements = pageUsers.map(u => {\r\n        return <User id={u.id}\r\n                     username={u.username}\r\n                     first_name={u.first_name}\r\n                     last_name={u.last_name}\r\n\r\n        />\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <Logout/>\r\n            <div className={styles.UsersHeader}>\r\n\r\n                <input value={filterValue}\r\n                       onChange={onFilterValueChange}\r\n                       placeholder=\"Начните вводить Username\"\r\n                       className={styles.UsersFilterInput}\r\n                />\r\n\r\n                <div\r\n                    className={classNames(styles.SortById, {\r\n                        [styles.ByUp]: isSortByUp === true,\r\n                        [styles.ByDown]: isSortByUp === false\r\n                    })}\r\n                    onClick={onSortByIdClick}>\r\n                    Sort By Id\r\n                </div>\r\n\r\n                <NavLink to=\"/Users/create\" className={styles.CreateNewUserLink}>\r\n                    Create new User\r\n                </NavLink>\r\n\r\n            </div>\r\n\r\n            <div className={styles.Users}>\r\n                <div className={styles.Header}>\r\n                    <div className={styles.User}>\r\n                        <div>Id</div>\r\n                        <div>username</div>\r\n                        <div>first_name</div>\r\n                        <div>last_name</div>\r\n                        <div>ViewProfile</div>\r\n                        <div>Delete</div>\r\n                    </div>\r\n                </div>\r\n                {usersElements}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.users,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst UsersCompose = compose(\r\n    WithSetPathNameInLocalStorage,\r\n    withAuthRedirect\r\n)(Users)\r\n\r\nexport default connect(mapStateToProps, {requestUsers})(UsersCompose)","export const sortById = (users, isSortByUp) => {\r\n    const groupById = (acc, item) => {\r\n        const id = item.id;\r\n        if (id in acc) {\r\n            acc[id].push(item);\r\n        } else {\r\n            acc[id] = [item];\r\n        }\r\n        return acc;\r\n    };\r\n    const sortByNum = (a, b) => a.num - b.num;\r\n    const sortByMinNum = (a, b) => a[0].num - b[0].num;\r\n\r\n    let groups = Object.values(users.reduce(groupById, {}))\r\n        .map(group => group.sort(sortByNum))\r\n        .sort(sortByMinNum);\r\n\r\n    if(isSortByUp) return [].concat(...groups)\r\n    return [].concat(...groups).reverse()\r\n}","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    let hasError = meta.error && meta.touched\r\n\r\n    return (\r\n        <>\r\n            <div className={props.className ? styles[props.className] : styles.Input}>\r\n                <input {...input} {...props} className={hasError ? styles.Error : \"\"}/>\r\n            </div>\r\n\r\n            {hasError && <div>\r\n                <span className={styles.ErrorSpan}>{meta.error}</span></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const passwordInput = ({input, meta, ...props}) => {\r\n    let hasError = meta.error && meta.touched\r\n\r\n    const setType = () => {\r\n        props.setType(\r\n            props.type === \"password\" ? \"text\" : \"password\"\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={props.className ? styles[props.className] : styles.Input}>\r\n                <input {...input} {...props} className={hasError ? styles.Error : \"\"}/>\r\n                <span onClick={setType} className={styles.ShowLabel}>\r\n                    Show\r\n                </span>\r\n            </div>\r\n\r\n            {hasError && <div>\r\n                <span className={styles.ErrorSpan}>{meta.error}</span>\r\n            </div>}\r\n\r\n        </>\r\n\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return \"This field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n\r\n}\r\n\r\nexport const correctUsername = username => {\r\n    if (/^[\\w.@+-]+$/.test(username)) return undefined\r\n    return \"Entered incorrect data. Use only Letters, digits and @/./+/-/_ \"\r\n}\r\n\r\nexport const correctFirstname = firstname => {\r\n    if (/^[a-zA-Z]+$/.test(firstname)) return undefined\r\n    return \"Только буквы латинского алфавита.\"\r\n}\r\n\r\nexport const correctLastname = lastname => {\r\n    if (/^[a-zA-Z]+$/.test(lastname)) return undefined\r\n    return \"Только буквы латинского алфавита.\"\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormControls/FormControls\";\r\nimport { correctFirstname,correctLastname,correctUsername, maxLengthCreator,requiredField} from \"../../validators/userValidator\";\r\nimport formStyles from \"../../common/FormControls/FormControls.module.css\"\r\nimport * as underscore from \"underscore\";\r\nimport {checkWhatObjectFieldWasChanged} from \"../../utils/checkWhatObjectFieldWasChanged\";\r\nimport styles from \"./Profile.module.css\"\r\n\r\nlet max150 = maxLengthCreator(150)\r\nlet max30 = maxLengthCreator(30)\r\n\r\nconst EditProfileForm = (props) => {\r\n\r\n    const onCancelClick = (e) => {\r\n        e.preventDefault()\r\n        props.onCancelClick()\r\n    }\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className={styles.EditProfileForm}>\r\n\r\n            <label>\r\n                Username:\r\n                <Field component={Input}\r\n                       validate={[requiredField, correctUsername]}\r\n                       name={\"username\"}\r\n                       placeholder={\"Username\"}\r\n\r\n                />\r\n            </label>\r\n\r\n            <label>\r\n                Имя:\r\n                <Field component={Input}\r\n                       validate={[requiredField, max30, correctFirstname]}\r\n                       name={\"first_name\"}\r\n                       placeholder={\"Имя\"}\r\n\r\n                />\r\n            </label>\r\n            <label>\r\n                Фамилия:\r\n                <Field component={Input}\r\n                       validate={[requiredField, max150, correctLastname]}\r\n                       name={\"last_name\"}\r\n                       placeholder={\"Фамилия\"}\r\n                />\r\n            </label>\r\n\r\n            <label>\r\n                is_active:\r\n                <Field name=\"is_active\" component={\"input\"} type=\"checkbox\"/>\r\n            </label>\r\n        </div>\r\n\r\n        {props.error ? <span className={formStyles.Error}>{props.error}</span> : null}\r\n\r\n        <div>\r\n            <button disabled={props.isSubmitting} className={styles.ProfileSubmitButton}>Save Changes</button>\r\n            <button className={styles.ProfileCancelButton} onClick={onCancelClick}>CANCEL</button>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        initialValues: {\r\n            username: state.profile.userProfile.username,\r\n            first_name: state.profile.userProfile.first_name,\r\n            last_name: state.profile.userProfile.last_name,\r\n            is_active: state.profile.userProfile.is_active\r\n        }\r\n    }\r\n}\r\n\r\nconst EditProfileReduxForm = compose(\r\n    connect(mapStateToProps, {}),\r\n    reduxForm({\r\n        form: \"editProfile\"\r\n    })\r\n)(EditProfileForm)\r\n\r\nconst EditProfile = (props) => {\r\n\r\n    let [isSubmitting, setSubmitting] = useState(false)\r\n\r\n    const handleSubmit = (formData) => {\r\n        setSubmitting(true)\r\n        let {username, first_name, last_name, is_active} = props.userProfile\r\n\r\n        if (underscore.isEqual({username, first_name, last_name, is_active}, formData)) {\r\n            setSubmitting(false)\r\n            props.onSuccess()\r\n        } else {\r\n            //Объект в котором только изменившиеся свойства\r\n            const objectWithChangedFields = checkWhatObjectFieldWasChanged(\r\n                formData,\r\n                {username, first_name, last_name, is_active}\r\n            )\r\n\r\n            props.updateUser(objectWithChangedFields, props.userId, props.token).then(\r\n                //Если response не пустой - есть ошибка. Пустой- всё хорошо. Вызываем onSuccess\r\n                response => {\r\n                    setSubmitting(false)\r\n                    if (response === undefined) props.onSuccess()\r\n                })\r\n        }\r\n    }\r\n\r\n    return <EditProfileReduxForm onSubmit={handleSubmit}\r\n                                 isSubmitting={isSubmitting}\r\n                                 onCancelClick={props.onCancelClick}/>\r\n}\r\n\r\nexport default EditProfile\r\n\r\n","export const checkWhatObjectFieldWasChanged = (obj_1, obj_2) => {\r\n    let matchesObj = new Map();\r\n\r\n    for (let value in obj_1) {\r\n\r\n        for (let item in obj_2) {\r\n\r\n            if (obj_1[value] !== obj_2[item] && value === item) {\r\n                matchesObj.set(value, obj_1[value]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return Object.fromEntries(matchesObj);\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {nullUserAction, requestUserProfile, updateUser} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport EditProfile from \"./ProfileForm\";\r\nimport styles from \"./Profile.module.css\"\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport WithSetPathNameInLocalStorage from \"../HOC/withSetPathNameInLocalStorage\";\r\n\r\n\r\n\r\nconst Profile = ({requestUserProfile, match, userProfile, updateUser, token, nullUserAction}) => {\r\n    let [isEditing, setEditing] = useState(false)\r\n\r\n    const killUserData = () => {\r\n        nullUserAction()\r\n    }\r\n\r\n    const onEditProfileCancelClick = () => {\r\n        setEditing(false)\r\n    }\r\n\r\n    const onEditProfileSuccess = () => {\r\n        setEditing(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        requestUserProfile(match.params.userId, token)\r\n\r\n        return killUserData()\r\n    }, [match.params.userId])\r\n\r\n    if (!userProfile) {\r\n        return <div>...Loading...</div>\r\n    }\r\n\r\n    return <div className={styles.Profile}>\r\n        <Logout/>\r\n        <div>\r\n            {isEditing ?\r\n                <EditProfile userProfile={userProfile}\r\n                             updateUser={updateUser}\r\n                             onCancelClick={onEditProfileCancelClick}\r\n                             onSuccess={onEditProfileSuccess}\r\n                             token={token}\r\n                             userId={match.params.userId}/>\r\n                :\r\n                <div className={styles.ProfileInfo}>\r\n                    <div>Username: {userProfile.username}</div>\r\n                    <div>Имя: {userProfile.first_name}</div>\r\n                    <div>Фамилия: {userProfile.last_name}</div>\r\n                    <div>is_active: {`${userProfile.is_active}`}</div>\r\n                    <div>is_superuser: {`${userProfile.is_superuser}`}</div>\r\n                    <div>last_login: {userProfile.last_login}</div>\r\n                    <button className={styles.EditButton} onClick={() => setEditing(true)}>Edit</button>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n        <NavLink to=\"/Users\">\r\n            <button className={styles.ToUsersButton}>Back to Users</button>\r\n        </NavLink>\r\n\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        userProfile: state.profile.userProfile,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst profileCompose = compose(\r\n    WithSetPathNameInLocalStorage,\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {requestUserProfile, updateUser, nullUserAction})\r\n)(Profile)\r\nexport default profileCompose","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return \"This field is required\"\r\n}\r\nexport const maxLengthCreator = maxLength => value => {\r\n    //!!!!!Очень интересный момент - проверка на value, undef value or not!!!!!\r\n    //Потому что если будет value = null, то null.length выдаст ошибку\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\nexport const uniqueUsernameCreator = usernames => username => {\r\n    return usernames.includes(username) ?\r\n        \"Такой Username уже занят\" : undefined\r\n}\r\n\r\nexport const correctUsername = username => {\r\n    if (/^[\\w.@+-]+$/.test(username)) return undefined\r\n    return \"Entered incorrect data. Use only Letters, digits and @/./+/-/_ \"\r\n}\r\n\r\nexport const correctFirstname = firstname => {\r\n    if (/^[a-zA-Z]+$/.test(firstname)) return undefined\r\n    return \"Только латинские буквы.\"\r\n}\r\n\r\nexport const correctLastname = lastname => {\r\n    if (/^[a-zA-Z]+$/.test(lastname)) return undefined\r\n    return \"Только латинские буквы.\"\r\n}\r\n\r\nexport const correctPassword = password => {\r\n    if (/^(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password)) return undefined\r\n    return \"Длина пароля 8 символов, 1 цифра, 1 заглавная.\"\r\n}","const validate = values => {\r\n    const errors = {};\r\n\r\n    if (values.confirmPassword !== values.password) {\r\n        errors.confirmPassword = \"Password mismatched\" ;\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validate;","import React, {useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport formStyles from \"../../../common/FormControls/FormControls.module.css\"\r\nimport styles from \"./CreateUser.module.css\"\r\nimport {Input, passwordInput} from \"../../../common/FormControls/FormControls\";\r\nimport {correctFirstname,correctLastname,correctPassword,correctUsername,maxLengthCreator,requiredField} from \"../../../validators/createUserValidator\";\r\nimport {compose} from \"redux\";\r\nimport validate from \"../../../validators/validate\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nlet max150 = maxLengthCreator(150)\r\nlet max30 = maxLengthCreator(30)\r\n\r\nconst CreateUserForm = (props) => {\r\n    let [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\")\r\n    let [typePassword, setTypePassword] = useState(\"password\")\r\n\r\n    return <form  className={styles.CreateUserForm} onSubmit={props.handleSubmit}>\r\n        <div>\r\n\r\n            <div>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <Field component={Input}\r\n                       validate={[requiredField, correctUsername, max150]}\r\n                       name=\"username\"\r\n                       id=\"username\"\r\n                       placeholder=\"Username\"\r\n                       className={\"StyledInput\"}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"first_name\">Имя:</label>\r\n                <Field component={Input}\r\n                       validate={[requiredField, max30, correctFirstname]}\r\n                       name=\"first_name\"\r\n                       id=\"first_name\"\r\n                       placeholder=\"Имя\"\r\n                       className={\"StyledInput\"}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"last_name\">Фамилия:</label>\r\n                <Field component={Input}\r\n                       validate={[requiredField, max150, correctLastname]}\r\n                       name=\"last_name\"\r\n                       id=\"last_name\"\r\n                       placeholder=\"Фамилия\"\r\n                       className={\"StyledInput\"}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"password\">Пароль:</label>\r\n                <Field component={passwordInput}\r\n                       validate={[requiredField, max150, correctPassword]}\r\n                       name=\"password\"\r\n                       placeholder=\"Пароль\"\r\n                       id=\"password\"\r\n                       type={typePassword}\r\n                       setType={setTypePassword}\r\n                       className={\"StyledPasswordInput\"}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"confirmPassword\">Повторите пароль:</label>\r\n                <Field component={passwordInput}\r\n                       validate={[requiredField, max150, correctPassword]}\r\n                       name=\"confirmPassword\"\r\n                       id=\"confirmPassword\"\r\n                       placeholder=\"Повторите пароль\"\r\n                       type={typeConfirmPassword}\r\n                       setType={setTypeConfirmPassword}\r\n                       className={\"StyledPasswordInput\"}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n\r\n        {props.error ? <span className={formStyles.Error}>{props.error}</span> : null}\r\n\r\n        <div>\r\n            <button\r\n                className={styles.CreateUserButton}\r\n                disabled={props.isSubmitting}>CreateUser</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst CreateUserReduxForm = compose(\r\n    reduxForm({\r\n        form: \"createUser\",\r\n        validate\r\n    }))(CreateUserForm)\r\n\r\nconst CreateUser = (props) => {\r\n\r\n    let [isSubmitting, setSubmitting] = useState(false)\r\n\r\n    const handleSubmit = (formData) => {\r\n        let {username, last_name, first_name, password} = formData\r\n\r\n        props.createNewUser({username, last_name, first_name, password, is_active: true}, props.token).then(\r\n            response => {\r\n                setSubmitting(false)\r\n                if (response === undefined) props.history.push(\"/Users\")\r\n            }\r\n        )\r\n    }\r\n\r\n    return <CreateUserReduxForm onSubmit={handleSubmit}\r\n                                setSubmitting={setSubmitting}\r\n                                isSubmitting={isSubmitting}/>\r\n}\r\n\r\nexport default withRouter(CreateUser)\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport CreateUserForm from \"./CreateUserForm\";\r\nimport {createNewUser} from \"../../../Redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./CreateUser.module.css\"\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\r\nimport Logout from \"../../Logout/Logout\";\r\nimport WithSetPathNameInLocalStorage from \"../../HOC/withSetPathNameInLocalStorage\";\r\n\r\nconst CreateUser = props => {\r\n    return <div  className={styles.CreateUser}>\r\n\r\n        <Logout/>\r\n\r\n        <CreateUserForm createNewUser={props.createNewUser} token={props.token}/>\r\n\r\n        <NavLink to=\"/Users\">\r\n            <button className={styles.ToUsersButton}>Back to Users</button>\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\nconst CreateUserCompose = compose(\r\n    WithSetPathNameInLocalStorage,\r\n    withAuthRedirect\r\n)(CreateUser)\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createNewUser})(CreateUserCompose)","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return \"This field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n\r\n}\r\n\r\nexport const correctUsername = username => {\r\n    if (/^[\\w.@+-]+$/.test(username)) return undefined\r\n    return \"Entered incorrect data.\"\r\n}\r\n\r\nexport const correctFirstname = firstname => {\r\n    if (/^[a-zA-Z]+$/.test(firstname)) return undefined\r\n    return \"Только буквы.\"\r\n}\r\n\r\nexport const correctLastname = lastname => {\r\n    if (/^[a-zA-Z]+$/.test(lastname)) return undefined\r\n    return \"Только буквы.\"\r\n}\r\n\r\nexport const correctPassword = password => {\r\n    //Длина пароля 8 символов, 1 цифра, 1 заглавная\r\n    if (/^(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password)) return undefined\r\n    return \"Entered incorrect data.\"\r\n}","import {correctPassword, correctUsername, maxLengthCreator, requiredField} from \"../../validators/loginValidator\";\r\nimport React, {useState} from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, passwordInput} from \"../../common/FormControls/FormControls\";\r\nimport formStyles from \"../../common/FormControls/FormControls.module.css\";\r\n\r\nlet max150 = maxLengthCreator(150)\r\nlet max128 = maxLengthCreator(128)\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    let [typePassword, setTypePassword] = useState(\"password\")\r\n\r\n    return <form onSubmit={props.handleSubmit} className={styles.LoginForm}>\r\n\r\n        <div className={styles.LoginInputWrapper}>\r\n\r\n            <Field component={Input}\r\n                   validate={[requiredField, correctUsername, max150]}\r\n                   name={\"username\"}\r\n                   placeholder={\"Login\"}\r\n                   className={\"StyledInput\"}\r\n            />\r\n\r\n        </div>\r\n\r\n        <div className={styles.LoginInputWrapper}>\r\n\r\n            <Field component={passwordInput}\r\n                   name={\"password\"} placeholder={\"Password\"}\r\n                   validate={[requiredField, correctPassword, max128]}\r\n                   type={typePassword}\r\n                   setType={setTypePassword}\r\n                   className={\"StyledPasswordInput\"}/>\r\n\r\n        </div>\r\n        <div className={styles.LoginInputWrapper}>\r\n\r\n            <label>\r\n                Remember me:\r\n                <Field name=\"remember_me\" component={\"input\"} type=\"checkbox\"/>\r\n            </label>\r\n\r\n        </div>\r\n\r\n        {props.error ?\r\n\r\n            <span className={formStyles.Error}>\r\n                {props.error}\r\n            </span>\r\n            :\r\n            null}\r\n\r\n        <div>\r\n\r\n            <button disabled={props.isSubmitting} className={styles.LoginSubmitButton}>\r\n                Войти в IT\r\n            </button>\r\n\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm","import {connect} from \"react-redux\"\r\nimport React, {useState} from \"react\"\r\nimport {login} from \"../../Redux/authReducer\";\r\nimport styles from \"./Login.module.css\"\r\nimport {compose} from \"redux\";\r\nimport LoginReduxForm from \"./LoginForm\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Login = ({login, history}) => {\r\n\r\n    let [isSubmitting, setSubmitting] = useState(false)\r\n\r\n    const onSubmit = (formData) => {\r\n        setSubmitting(true)\r\n        let {username, password, remember_me} = formData\r\n\r\n\r\n        login(username, password).finally(_ => {\r\n                setSubmitting(false)\r\n            }\r\n        ).then((response) => {\r\n\r\n            if(remember_me) localStorage.setItem('token', response.token)\r\n            history.push('/Users')\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Login}>\r\n            <h1 className={styles.LoginHeading}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}\r\n                            setSubmitting={setSubmitting}\r\n                            isSubmitting={isSubmitting}\r\n                            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst loginCompose = compose(\r\n    withRouter,\r\n    connect(null, {login})\r\n)(Login)\r\n\r\nexport default loginCompose","import React, {useEffect} from 'react';\nimport './App.module.css';\nimport Users from \"./components/Users/Users\";\nimport {withRouter, Redirect, Route} from \"react-router-dom\";\nimport Profile from \"./components/Profile/Profile\";\nimport CreateUser from \"./components/Users/CreateUser/CreateUser\";\nimport styles from \"./App.module.css\"\nimport {initializeApp} from \"./Redux/authReducer\";\nimport {connect} from \"react-redux\";\nimport Login from \"./components/Login/Login\";\n\nconst useInitializeApp = (initializeApp, setIsInitializing) => {\n    useEffect(() => {\n\n        initializeApp().then(\n            () => setIsInitializing(false)\n\n        )\n    }, [])\n}\n\nconst useCheckLastPathname = (isAuth, history, lastPath) => {\n    useEffect(() => {\n        if ( isAuth ){\n            if( !!localStorage.getItem('lastPath') ) {\n                history.push(localStorage.getItem('lastPath'))\n            }\n            else history.push(\"/Users\")\n        }\n        else history.push(\"/Login\")\n    },[isAuth])\n}\n\nconst App = ({initializeApp, isAuth, history, lastPath}) => {\n    let [isInitializing, setIsInitializing] = React.useState(true)\n\n    useInitializeApp(initializeApp, setIsInitializing)\n\n    useCheckLastPathname(isAuth, history, lastPath)\n\n\n    return (\n        <div className={styles.App}>\n            {isInitializing ?\n                <div>\n                    ...Loading...\n                </div>\n                :\n                <>\n                    <Route exact path=\"/Users\" render={() => <Users/>}/>\n                    <Route path=\"/Profile/:userId\" render={() => <Profile/>}/>\n                    <Route path=\"/Users/create\" render={() => <CreateUser/>}/>\n                    <Route path=\"/Login\" render={() => <Login/>}/>\n                </>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        isAuth: state.auth.isAuth,\n        lastPath: state.auth.lastPath\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, {initializeApp})(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport authReducer from \"./authReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\n\r\nlet reducers = combineReducers({\r\n        form: formReducer,\r\n        users: usersReducer,\r\n        profile: profileReducer,\r\n        auth: authReducer\r\n    }\r\n)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3D9nx\",\"LoginForm\":\"Login_LoginForm__1rfyv\",\"LoginHeading\":\"Login_LoginHeading__3PcH-\",\"LoginInputWrapper\":\"Login_LoginInputWrapper__18XQ0\",\"LoginSubmitButton\":\"Login_LoginSubmitButton__2m5nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateUser\":\"CreateUser_CreateUser__1LAUi\",\"CreateUserForm\":\"CreateUser_CreateUserForm__JdyJx\",\"ToUsersButton\":\"CreateUser_ToUsersButton__3Svu4\",\"CreateUserButton\":\"CreateUser_CreateUserButton__3u8at\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Vlopc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logout\":\"Logout_Logout__28q4D\",\"LogoutButton\":\"Logout_LogoutButton__23O3e\"};"],"sourceRoot":""}