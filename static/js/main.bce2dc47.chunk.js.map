{"version":3,"sources":["components/Users/Users.module.css","common/FormControls/FormControls.module.css","common/FormControls/FormControls.js","validators/loginValidator.js","Server/Users.js","dalApi/dalApi.js","Redux/authReducer.js","components/Login/Login.jsx","Redux/usersReducer.js","components/Users/User.jsx","components/Users/Users.jsx","utils/sortById.js","Redux/profileReducer.js","validators/userValidator.js","components/Profile/ProfileForm.jsx","components/Profile/Profile.jsx","validators/createUserValidator.js","validators/validate.js","components/Users/CreateUser/CreateUserForm.jsx","components/Users/CreateUser/CreateUser.jsx","App.js","serviceWorker.js","Redux/Store.js","index.js","components/Login/Login.module.css","App.module.css"],"names":["module","exports","Input","input","meta","props","hasError","error","touched","className","styles","Error","ErrorSpan","passwordInput","onClick","setType","type","ShowLabel","requiredField","value","maxLengthCreator","maxLength","length","correctUsername","username","test","correctPassword","password","Users","id","first_name","last_name","isActive","requestUsersAPI","token","Promise","resolve","reject","data","sort","a","b","Math","random","code","requestUserProfileAPI","userId","userData","map","u","filter","element","createUserAPI","usernames","console","log","includes","push","addNewUser","updateUserAPI","updateUser","window","instance","axios","baseURL","loginAPI","post","then","response","status","createNewUserServer","updateUserServer","initialState","isAuth","authReducer","state","action","max150","max128","LoginReduxForm","reduxForm","form","useState","typePassword","setTypePassword","onSubmit","handleSubmit","LoginForm","LoginInputWrapper","Field","component","validate","name","placeholder","formStyles","disabled","isSubmitting","LoginSubmitButton","loginCompose","compose","connect","login","dispatch","stopSubmit","_error","setSubmitting","Login","LoginHeading","formData","finally","_","history","users","setUsersAction","addNewUserAction","usersReducer","User","to","src","requestUsers","pageUsers","setPageUsers","filterValue","setFilterValue","useEffect","useRequestUsers","usersElements","onChange","e","target","sortByNum","num","groups","Object","values","reduce","acc","item","group","concat","sortById","userProfile","updateUserAction","profileReducer","correctFirstname","firstname","correctLastname","lastname","max30","EditProfileReduxForm","initialValues","profile","preventDefault","onCancelClick","EditProfile","underscore","onSuccess","profileCompose","withRouter","requestUserProfile","isEditing","setEditing","match","params","errors","confirmPassword","CreateUserReduxForm","typeConfirmPassword","setTypeConfirmPassword","htmlFor","createNewUser","canRedirect","appCompose","auth","App","exact","path","render","Boolean","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bce2dc47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"Users_User__1O4em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"FormControls_Error__iQfA6\",\"ErrorSpan\":\"FormControls_ErrorSpan__2CDXA\",\"Input\":\"FormControls_Input__m1qpb\",\"ShowLabel\":\"FormControls_ShowLabel__2AQOz\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    let hasError = meta.error && meta.touched\r\n    return (\r\n        <>\r\n            <div className={styles.Input}>\r\n                <input {...input} {...props} className={hasError ? styles.Error : \"\"}/>\r\n            </div>\r\n            {hasError && <div>\r\n                <span className={styles.ErrorSpan}>{meta.error}</span></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const passwordInput = ({input, meta, ...props}) => {\r\n    let hasError = meta.error && meta.touched\r\n    const setType = () => {\r\n        props.setType(\r\n            props.type === \"password\" ? \"text\" : \"password\"\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className={styles.Input}>\r\n                <input {...input} {...props} className={hasError ? styles.Error : \"\"}/>\r\n                <span onClick={setType} className={styles.ShowLabel}>Show</span>\r\n            </div>\r\n            {hasError && <div>\r\n                <span className={styles.ErrorSpan}>{meta.error}</span>\r\n            </div>}\r\n        </>\r\n\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return \"This field is required\"\r\n}\r\nexport const maxLengthCreator = maxLength => value => {\r\n    //!!!!!Очень интересный момент - проверка на value, undef value or not!!!!!\r\n    //Потому что если будет value = null, то null.length выдаст ошибку\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n\r\n}\r\nexport const correctUsername = username => {\r\n    if (/^[\\w.@+-]+$/.test(username)) return undefined\r\n    return \"Entered incorrect data.\"\r\n}\r\nexport const correctFirstname = firstname => {\r\n    if (/^[a-zA-Z]+$/.test(firstname)) return undefined\r\n    return \"Только буквы.\"\r\n}\r\nexport const correctLastname = lastname => {\r\n    if (/^[a-zA-Z]+$/.test(lastname)) return undefined\r\n    return \"Только буквы.\"\r\n}\r\nexport const correctPassword = password => {\r\n    //Длина пароля 8 символов, 1 цифра, 1 заглавная\r\n    if (/^(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password)) return undefined\r\n    return \"Entered incorrect data.\"\r\n}","let Users = [\r\n    {\r\n        id: 1,\r\n        username: \"Roma_roma\",\r\n        first_name: \"Roma\",\r\n        last_name: \"Kucherenko\",\r\n        password: \"testUserPassword1\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 2,\r\n        username: \"Dima600kg\",\r\n        first_name: \"Dmitry\",\r\n        last_name: \"Golubochkin\",\r\n        password: \"testUserPassword2\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 3,\r\n        username: \"BigRonnie\",\r\n        first_name: \"Ronnie\",\r\n        last_name: \"Coleman\",\r\n        password: \"testUserPassword3\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 4,\r\n        username: \"Ingvar\",\r\n        first_name: \"Igor\",\r\n        last_name: \"Voitenko\",\r\n        password: \"testUserPassword4\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 5,\r\n        username: \"Yuriy_104\",\r\n        first_name: \"Yuriy\",\r\n        last_name: \"Thursday\",\r\n        password: \"testUserPassword5\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 6,\r\n        username: \"Adil_Jalelov\",\r\n        first_name: \"Adil\",\r\n        last_name: \"Jalelov\",\r\n        password: \"testUserPassword6\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 7,\r\n        username: \"DimaBicepcs\",\r\n        first_name: \"Dima\",\r\n        last_name: \"Biceps\",\r\n        password: \"testUserPassword7\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 8,\r\n        username: \"IvanKrasavin\",\r\n        first_name: \"Ivan\",\r\n        last_name: \"Krasavin\",\r\n        password: \"testUserPassword8\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 9,\r\n        username: \"26_Oleg_26\",\r\n        first_name: \"Oleg\",\r\n        last_name: \"Nechiporenko\",\r\n        password: \"testUserPassword9\",\r\n        isActive: true\r\n    },\r\n    {\r\n        id: 10,\r\n        username: \"DenisFit4Life\",\r\n        first_name: \"Denis\",\r\n        last_name: \"Borisov\",\r\n        password: \"testUserPassword10\",\r\n        isActive: true\r\n    }]\r\n//Псевдозапросы, когда сервер заработает логика запросов и обработки\r\n// их ответов уже будет написана\r\nconst getUsernames = () => {\r\n    return Users.map(u => u.username)\r\n}\r\nconst getLastUser = () => {\r\n    return Users[Users.length - 1]\r\n}\r\nconst addNewUser = (userData) => {\r\n    Users.push({\r\n        id: Users.length + 1,\r\n        ...userData\r\n    })\r\n}\r\nconst updateUser = userData => {\r\n    Users = Users.map(u => {\r\n        if (u.id == userData.id) {\r\n            return {\r\n                ...userData,\r\n                password: u.password\r\n            }\r\n        }\r\n        return u\r\n    })\r\n}\r\nexport const requestUsersAPI = (token) => {\r\n    return new Promise((resolve, reject) => {\r\n        if (token) {\r\n            let usersCopy = [...Users]\r\n            resolve({\r\n                data: usersCopy.sort(function func(a, b) {\r\n                    return 0.5 - Math.random()\r\n                }),\r\n                code: 200\r\n            })\r\n        } else {\r\n            reject({\r\n                code: 401,\r\n                error: \"You are not authorized\"\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const requestUserProfileAPI = (userId) => {\r\n    return new Promise((resolve, reject) => {\r\n        if (1) {\r\n            resolve({\r\n                userData: Users.map(u => {\r\n                    if (u.id == userId) {\r\n                        return u\r\n                    }\r\n                }).filter(element => element)[0],\r\n                code: 200\r\n            })\r\n        } else {\r\n            reject({\r\n                code: 401,\r\n                error: \"You are not authorized\"\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const createUserAPI = userData => {\r\n    return new Promise((resolve, reject) => {\r\n        let usernames = getUsernames()\r\n        console.log(userData.username, usernames)\r\n        if (usernames.includes(userData.username)) {\r\n            reject({\r\n                error: \"We already have user with this username\",\r\n                code: 400\r\n            })\r\n        } else {\r\n            addNewUser(userData)\r\n            resolve({\r\n                code: 200,\r\n                data: getLastUser()\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const updateUserAPI = userData => {\r\n    return new Promise((resolve, reject) => {\r\n        updateUser(userData)\r\n        resolve({\r\n            userData: userData})\r\n    })\r\n}\r\nwindow.Users = Users","import * as axios from \"axios\"\r\nimport {createUserAPI, updateUserAPI} from \"../Server/Users\";\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://emphasoft-test-assignment.herokuapp.com/\"\r\n})\r\n\r\nexport const loginAPI = (username, password) => {\r\n    //Я делаю запрос и возвращаю ответ. С этим ответом я не провожу манипуляций\r\n    return instance.post(\"api-token-auth/\",{username, password}).then(\r\n        response => {\r\n            return response\r\n        },\r\n        error => {\r\n            return error.response.status\r\n        }\r\n    )\r\n}\r\nexport const requestUsersServer = () => {\r\n    instance.get(\"/api/v1/users/\", {\r\n    }).then(\r\n        response => console.log(response)\r\n    )\r\n}\r\nexport const createNewUserServer = async userData => {\r\n    return await createUserAPI(userData)\r\n}\r\nexport const updateUserServer = async userData => {\r\n    return updateUserAPI(userData);\r\n}","import { loginAPI } from \"../dalApi/dalApi\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_AUTH_DATA = \"SET_AUTH_DATA\"\r\n\r\nlet initialState = {\r\n    isAuth: false,\r\n    token: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthDataAction = (token) => ({type: SET_AUTH_DATA, token})\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    let response = await loginAPI(username, password)\r\n    if (response === 400){\r\n        dispatch(stopSubmit(\"login\", {_error: \"Incorrect Username/Password\"}))\r\n    }\r\n    else if (response.status === 200){\r\n        dispatch(setAuthDataAction(response.data.token))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer","import {connect} from \"react-redux\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport formStyles from \"../../common/FormControls/FormControls.module.css\"\r\nimport {Input, passwordInput} from \"../../common/FormControls/FormControls\";\r\nimport {correctPassword, correctUsername, maxLengthCreator, requiredField} from \"../../validators/loginValidator\";\r\nimport {login} from \"../../Redux/authReducer\";\r\nimport styles from \"./Login.module.css\"\r\nimport {compose} from \"redux\";\r\n\r\nlet max150 = maxLengthCreator(150)\r\nlet max128 = maxLengthCreator(128)\r\nconst LoginForm = (props) => {\r\n    let [typePassword, setTypePassword] = useState(\"password\")\r\n    return <form onSubmit={props.handleSubmit} className={styles.LoginForm}>\r\n        <div className={styles.LoginInputWrapper}>\r\n            <Field component={Input}\r\n                   validate={[requiredField, correctUsername, max150]}\r\n                   name={\"username\"}\r\n                   placeholder={\"Login\"}\r\n            />\r\n        </div>\r\n        <div className={styles.LoginInputWrapper}>\r\n            <Field component={passwordInput} type={\"text\"}\r\n                   name={\"password\"} placeholder={\"Password\"}\r\n                   validate={[requiredField, correctPassword, max128]}\r\n                   type={typePassword}\r\n                   setType={setTypePassword}/>\r\n        </div>\r\n        {props.error ? <span className={formStyles.Error}>{props.error}</span> : null}\r\n        <div>\r\n            <button disabled={props.isSubmitting} className={styles.LoginSubmitButton}>Войти в IT</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    let [isSubmitting, setSubmitting] = useState(false)\r\n    const onSubmit = (formData) => {\r\n        setSubmitting(true)\r\n        let {username, password} = formData\r\n        props.login(username, password).finally(_ => {\r\n                setSubmitting(false)\r\n            }\r\n        ).then(() => {\r\n                props.history.push('/Users')\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div className={styles.Login}>\r\n            <h1 className={styles.LoginHeading}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} setSubmitting={setSubmitting}\r\n                            isSubmitting={isSubmitting}/>\r\n        </div>\r\n    )\r\n}\r\nconst loginCompose = compose(\r\n    connect(null, {login})\r\n)(Login)\r\n\r\nexport default loginCompose","import {requestUsersAPI} from \"../Server/Users\";\r\nimport {createNewUserServer} from \"../dalApi/dalApi\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USERS = `SET_USERS`\r\nconst ADD_NEW_USER = \"ADD_NEW_USER\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                //по идеи нам нужны только id and username значит надо\r\n                // реализовать такую логику что только эти данные мы будем хранить\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n\r\n        case ADD_NEW_USER:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.userData]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setUsersAction = (users) => ({type: SET_USERS, users: users})\r\nexport const addNewUserAction = (userData) => ({type: ADD_NEW_USER, userData})\r\n\r\nexport const requestUsers = (token = \"781bd9f1de084f4daa7ba2aa8a71a2eab855354e\") => {\r\n    //token должен зашиваться в cookie\r\n    return async dispatch => {\r\n        let response = await requestUsersAPI(token)\r\n        if (response.code === 200) {\r\n            dispatch(setUsersAction(response.data))\r\n        } else if (response.code === 401) {\r\n            console.log(response.error)\r\n        }\r\n    }\r\n}\r\nexport const createNewUser = userData => async dispatch => {\r\n    try {\r\n        let response = await createNewUserServer(userData)\r\n        if (response.code === 200) {\r\n            dispatch(addNewUserAction(response.data))\r\n            return true\r\n        }\r\n    } catch (error) {\r\n        if (error.code === 400) {\r\n            dispatch(stopSubmit(\"createUser\", {_error: error.error}))\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\nexport default usersReducer","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    return <div className={styles.User}>\r\n        <NavLink to={\"/Profile/\" + props.id}>\r\n            <img src=\"https://static2.clutch.co/s3fs-public/logos/de2c8bde806ea56b7e405a9a86a501be.png?m.QYppUsaGYggvTPcXhRKy0uiVPMYv4Z\"/>\r\n        </NavLink>\r\n        <div><span>{props.username}, {props.id}</span></div>\r\n        <div>{props.first_name} {props.last_name}</div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default User","import React, {useEffect, useState} from \"react\";\r\nimport {requestUsers} from \"../../Redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport User from \"./User\";\r\nimport {sortById} from \"../../utils/sortById\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst useRequestUsers = props => {\r\n    useEffect(() => {\r\n        props.requestUsers(props.token)\r\n    }, [])\r\n}\r\nconst Users = (props) => {\r\n    let [pageUsers, setPageUsers] = useState(props.users)\r\n\r\n    let [filterValue, setFilterValue] = useState(\"\")\r\n    useRequestUsers(props)\r\n    useEffect(() => {\r\n        setPageUsers(props.users)\r\n    }, [props.users])\r\n\r\n    const filterUsers = (users, value) => {\r\n        return users.filter(u => u.username.includes(value))\r\n    }\r\n    const onFilterValueChange = (e) => {\r\n        setFilterValue(e.target.value)\r\n        setPageUsers(filterUsers(props.users, e.target.value))\r\n    }\r\n    const onSortByIdClick = () => {\r\n        setPageUsers(sortById(pageUsers))\r\n    }\r\n    let usersElements = pageUsers.map(u => {\r\n        return <User id={u.id} username={u.username} first_name={u.first_name} last_name={u.last_name}/>\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <input value={filterValue} onChange={onFilterValueChange} placeholder=\"Начните вводить Username\"/>\r\n                <button onClick={onSortByIdClick}>Sort By Id</button>\r\n                <NavLink to=\"/Users/create\">\r\n                    <button>Create new User</button>\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"Users\">\r\n                {usersElements}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.users\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {requestUsers})(Users)","export const sortById = (users) => {\r\n    const groupById = (acc, item) => {\r\n        const id = item.id;\r\n        if (id in acc) {\r\n            acc[id].push(item);\r\n        } else {\r\n            acc[id] = [item];\r\n        }\r\n        return acc;\r\n    };\r\n    const sortByNum = (a, b) => a.num - b.num;\r\n    const sortByMinNum = (a, b) => a[0].num - b[0].num;\r\n\r\n    let groups = Object.values(users.reduce(groupById, {}))\r\n        .map(group => group.sort(sortByNum))\r\n        .sort(sortByMinNum);\r\n    return [].concat(...groups)\r\n}","import {requestUserProfileAPI} from \"../Server/Users\";\r\nimport {updateUserServer} from \"../dalApi/dalApi\";\r\n\r\nconst SET_USER_PROFILE = `SET_USER_PROFILE`;\r\nconst UPDATE_USER = \"UPDATE_USER\"\r\n\r\nlet initialState = {\r\n    userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.userProfile}\r\n            }\r\n        }\r\n        case UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.userData}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setUserProfile = (userProfile) => ({type: SET_USER_PROFILE, userProfile})\r\n\r\nexport const requestUserProfile = (userId) => {\r\n    return async dispatch => {\r\n        let response = await requestUserProfileAPI(userId)\r\n        if(response.code === 200){\r\n            dispatch(setUserProfile(response.userData))\r\n        }\r\n        else if(response.code === 401){\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserAction = (userData) => ({type: UPDATE_USER, userData})\r\nexport const updateUser = userData => async dispatch => {\r\n    let response = await updateUserServer(userData)\r\n    dispatch(updateUserAction(response.userData))\r\n}\r\n\r\nexport default profileReducer","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return \"This field is required\"\r\n}\r\nexport const maxLengthCreator = maxLength => value => {\r\n    //!!!!!Очень интересный момент - проверка на value, undef value or not!!!!!\r\n    //Потому что если будет value = null, то null.length выдаст ошибку\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n\r\n}\r\nexport const correctUsername = username => {\r\n    if (/^[\\w.@+-]+$/.test(username)) return undefined\r\n    return \"Entered incorrect data. Use only Letters, digits and @/./+/-/_ \"\r\n}\r\nexport const correctFirstname = firstname => {\r\n    if (/^[a-zA-Z]+$/.test(firstname)) return undefined\r\n    return \"Только буквы.\"\r\n}\r\nexport const correctLastname = lastname => {\r\n    if (/^[a-zA-Z]+$/.test(lastname)) return undefined\r\n    return \"Только буквы.\"\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormControls/FormControls\";\r\nimport {\r\n    correctFirstname, correctLastname, correctUsername, maxLengthCreator, requiredField\r\n} from \"../../validators/userValidator\";\r\nimport formStyles from \"../../common/FormControls/FormControls.module.css\"\r\nimport * as underscore from \"underscore\";\r\n\r\nlet max150 = maxLengthCreator(150)\r\nlet max30 = maxLengthCreator(30)\r\n\r\nconst EditProfileForm = (props) => {\r\n    const onCancelClick = (e) => {\r\n        e.preventDefault()\r\n        props.onCancelClick()\r\n    }\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            Username:\r\n            <Field component={Input}\r\n                   validate={[requiredField, correctUsername]}\r\n                   name={\"username\"}\r\n                   placeholder={\"Username\"}\r\n\r\n            />\r\n            Имя:\r\n            <Field component={Input}\r\n                   validate={[requiredField, max30, correctFirstname]}\r\n                   name={\"first_name\"}\r\n                   placeholder={\"Имя\"}\r\n\r\n            />\r\n            Фамилия:\r\n            <Field component={Input}\r\n                   validate={[requiredField, max150, correctLastname]}\r\n                   name={\"last_name\"}\r\n                   placeholder={\"Фамилия\"}\r\n            />\r\n        </div>\r\n        {props.error ? <span className={formStyles.Error}>{props.error}</span> : null}\r\n        <div>\r\n            <button disabled={props.isSubmitting}>Save Changes</button>\r\n            <button onClick={onCancelClick}>CANCEL</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        initialValues: {\r\n            username: state.profile.userProfile.username,\r\n            first_name: state.profile.userProfile.first_name,\r\n            last_name: state.profile.userProfile.last_name\r\n        }\r\n    }\r\n}\r\n\r\nconst EditProfileReduxForm = compose(\r\n    connect(mapStateToProps, {}),\r\n    reduxForm({\r\n        form: \"editProfile\"\r\n    })\r\n)(EditProfileForm)\r\n\r\nconst EditProfile = (props) => {\r\n\r\n    let [isSubmitting, setSubmitting] = useState(false)\r\n    const handleSubmit = (formData) => {\r\n        setSubmitting(true)\r\n        let {username, first_name, last_name} = props.userProfile\r\n        if (underscore.isEqual({username, first_name, last_name}, formData)) {\r\n            setSubmitting(false)\r\n            props.onSuccess()\r\n        } else {\r\n            props.updateUser({...formData, id: props.userId}).then(() => {\r\n                    setSubmitting(false)\r\n                    props.onSuccess()\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return <EditProfileReduxForm onSubmit={handleSubmit}\r\n                                 isSubmitting={isSubmitting}\r\n                                 onCancelClick={props.onCancelClick}/>\r\n}\r\n\r\nexport default EditProfile\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {requestUserProfile, updateUser} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport EditProfile from \"./ProfileForm\";\r\n\r\nconst Profile = props => {\r\n    let [isEditing, setEditing] = useState(false)\r\n    const onEditProfileCancelClick = () => {\r\n        setEditing(false)\r\n    }\r\n\r\n    const onEditProfileSuccess = () => {\r\n        setEditing(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.requestUserProfile(props.match.params.userId)\r\n    }, [])\r\n\r\n    if (!props.userProfile) {\r\n        return <div>...Loading...</div>\r\n    }\r\n\r\n    return <div>\r\n        <div className=\"userForm\">\r\n            {isEditing ?\r\n                <EditProfile userProfile={props.userProfile}\r\n                             updateUser={props.updateUser}\r\n                             onCancelClick={onEditProfileCancelClick}\r\n                             onSuccess={onEditProfileSuccess}\r\n                             userId={props.match.params.userId}/>\r\n                :\r\n                <div>\r\n                    <div>Username: {props.userProfile.username}</div>\r\n                    <div>Имя: {props.userProfile.first_name}</div>\r\n                    <div>Фамилия: {props.userProfile.last_name}</div>\r\n                    <button onClick={() => setEditing(true)}>Edit</button>\r\n                </div>\r\n            }\r\n        </div>\r\n        <NavLink to=\"/Users\">\r\n            <button>Back to Users</button>\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        userProfile: state.profile.userProfile\r\n    }\r\n}\r\n\r\nconst profileCompose = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {requestUserProfile, updateUser})\r\n)(Profile)\r\nexport default profileCompose","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return \"This field is required\"\r\n}\r\nexport const maxLengthCreator = maxLength => value => {\r\n    //!!!!!Очень интересный момент - проверка на value, undef value or not!!!!!\r\n    //Потому что если будет value = null, то null.length выдаст ошибку\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\nexport const uniqueUsernameCreator = usernames => username => {\r\n    return usernames.includes(username) ?\r\n        \"Такой Username уже занят\" : undefined\r\n}\r\nexport const correctUsername = username => {\r\n    if (/^[\\w.@+-]+$/.test(username)) return undefined\r\n    return \"Entered incorrect data. Use only Letters, digits and @/./+/-/_ \"\r\n}\r\nexport const correctFirstname = firstname => {\r\n    if (/^[a-zA-Z]+$/.test(firstname)) return undefined\r\n    return \"Только латинские буквы.\"\r\n}\r\nexport const correctLastname = lastname => {\r\n    if (/^[a-zA-Z]+$/.test(lastname)) return undefined\r\n    return \"Только латинские буквы.\"\r\n}\r\nexport const correctPassword = password => {\r\n    if (/^(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password)) return undefined\r\n    return \"Длина пароля 8 символов, 1 цифра, 1 заглавная.\"\r\n}","const validate = values => {\r\n    const errors = {};\r\n\r\n    if (values.confirmPassword !== values.password) {\r\n        errors.confirmPassword = \"Password mismatched\" ;\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validate;","import React, {useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport formStyles from \"../../../common/FormControls/FormControls.module.css\"\r\nimport styles from \"./CreateUser.module.css\"\r\nimport {Input, passwordInput} from \"../../../common/FormControls/FormControls\";\r\nimport {\r\n    correctFirstname,\r\n    correctLastname,\r\n    correctPassword,\r\n    correctUsername,\r\n    maxLengthCreator,\r\n    requiredField\r\n} from \"../../../validators/createUserValidator\";\r\nimport {compose} from \"redux\";\r\nimport validate from \"../../../validators/validate\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nlet max150 = maxLengthCreator(150)\r\nlet max30 = maxLengthCreator(30)\r\n\r\nconst CreateUserForm = (props) => {\r\n    let [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\")\r\n    let [typePassword, setTypePassword] = useState(\"password\")\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <div>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <Field component={Input}\r\n                       validate={[requiredField, correctUsername, max150]}\r\n                       name=\"username\"\r\n                       id=\"username\"\r\n                       placeholder=\"Username\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"first_name\">Имя:</label>\r\n                <Field component={Input}\r\n                       validate={[requiredField, max30, correctFirstname]}\r\n                       name=\"first_name\"\r\n                       id=\"first_name\"\r\n                       placeholder=\"Имя\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"last_name\">Фамилия:</label>\r\n                <Field component={Input}\r\n                       validate={[requiredField, max150, correctLastname]}\r\n                       name=\"last_name\"\r\n                       id=\"last_name\"\r\n                       placeholder=\"Фамилия\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"password\">Пароль:</label>\r\n                <Field component={passwordInput}\r\n                       validate={[requiredField, max150, correctPassword]}\r\n                       name=\"password\"\r\n                       placeholder=\"Пароль\"\r\n                       id=\"password\"\r\n                       type={typePassword}\r\n                       setType={setTypePassword}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"confirmPassword\">Повторите пароль:</label>\r\n                <Field component={passwordInput}\r\n                       validate={[requiredField, max150, correctPassword]}\r\n                       name=\"confirmPassword\"\r\n                       id=\"confirmPassword\"\r\n                       placeholder=\"Повторите пароль\"\r\n                       type={typeConfirmPassword}\r\n                       setType={setTypeConfirmPassword}\r\n                />\r\n            </div>\r\n        </div>\r\n        {props.error ? <span className={formStyles.Error}>{props.error}</span> : null}\r\n        <div>\r\n            <button disabled={props.isSubmitting}>CreateUser</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst CreateUserReduxForm = compose(\r\n    reduxForm({\r\n        form: \"createUser\",\r\n        validate\r\n    }))(CreateUserForm)\r\n\r\nconst CreateUser = (props) => {\r\n    let [isSubmitting, setSubmitting] = useState(false)\r\n    const handleSubmit = (formData) => {\r\n        props.createNewUser(formData).then(\r\n            canRedirect => {\r\n                if(canRedirect){\r\n                    props.history.push(\"/Users\")\r\n                }\r\n            }\r\n        )\r\n    }\r\n    return <CreateUserReduxForm onSubmit={handleSubmit}\r\n                                setSubmitting={setSubmitting}\r\n                                isSubmitting={isSubmitting}/>\r\n}\r\n\r\nexport default withRouter(CreateUser)\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport CreateUserForm from \"./CreateUserForm\";\r\nimport {createNewUser} from \"../../../Redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst CreateUser = props => {\r\n    return <div>\r\n        <CreateUserForm createNewUser={props.createNewUser}/>\r\n        <NavLink to=\"/Users\">\r\n            <button>Back to Users</button>\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default connect(null, {createNewUser})(CreateUser)","import React from 'react';\nimport './App.module.css';\nimport Login from \"./components/Login/Login\";\nimport Users from \"./components/Users/Users\";\nimport {connect} from \"react-redux\";\nimport {withRouter, Route} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport Profile from \"./components/Profile/Profile\";\nimport CreateUser from \"./components/Users/CreateUser/CreateUser\";\nimport styles from \"./App.module.css\"\n\n\nconst App = (props) => {\n    return (\n        <div className={styles.App}>\n            {/*Проверка на авторизацию*/}\n            {props.isAuth ?\n                <div className={styles.App}>\n                    <Route exact path=\"/Users\" render={() => <Users/>}/>\n                    <Route path=\"/Profile/:userId\" render={() => <Profile/>}/>\n                    <Route path=\"/Users/create\" render={() => <CreateUser/>}/>\n                </div>\n                :\n                <Login history={props.history}/>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.isAuth,\n        token: state.auth.token\n    }\n}\nconst appCompose = compose(\n    withRouter,\n    connect(mapStateToProps, null)\n)(App)\nexport default appCompose;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport authReducer from \"./authReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\n\r\nlet reducers = combineReducers({\r\n        form: formReducer,\r\n        users: usersReducer,\r\n        profile: profileReducer,\r\n        auth: authReducer\r\n    }\r\n)\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3zNGw\",\"LoginForm\":\"Login_LoginForm__26Utr\",\"LoginHeading\":\"Login_LoginHeading__z_lmw\",\"LoginInputWrapper\":\"Login_LoginInputWrapper__1bgBZ\",\"LoginSubmitButton\":\"Login_LoginSubmitButton__1httV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1GlMj\"};"],"sourceRoot":""}